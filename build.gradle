plugins {
    id 'java'
    id 'io.quarkus'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-spring-data-jpa'
    implementation 'io.quarkus:quarkus-jdbc-mysql'
    implementation("io.quarkus:quarkus-spring-web")
    implementation 'io.quarkus:quarkus-amazon-lambda-http'

    testImplementation "io.quarkus:quarkus-junit5"
    testImplementation "io.quarkus:quarkus-test-amazon-lambda"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
    testImplementation 'org.assertj:assertj-core:3.21.0'
}

group 'com.example'
version '1.0.0-SNAPSHOT'
sourceCompatibility = '17'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jacoco {
    toolVersion = "0.8.10"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // Garante o relatório mesmo que o teste falhe

    // Evita problemas de instrumentação com Java 21
    jvmArgs += [
            "--add-opens", "java.base/java.lang=ALL-UNNAMED",
            "--add-opens", "java.base/sun.util.locale.provider=ALL-UNNAMED"
    ]
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}